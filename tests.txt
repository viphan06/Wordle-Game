x canary test
x tally for target FAVOR guess FAVOR
x tally for target FAVOR guess TESTS
x tally for target FAVOR guess RAPID
x tally for target FAVOR guess MAYOR
x tally for target FAVOR guess FOR
x tally for target FAVOR guess FERVER
x tally for target FAVOR guess RIVER
x tally for target FAVOR guess AMAST
x tally for target SKILL guess SKILL
x tally for target SKILL guess SWIRL
x tally for target SKILL guess CIVIL
x tally for target SKILL guess SHIMS
x tally for target SKILL guess SILLY
x tally for target SKILL guess SLICE

x play with attempt 0 target FAVOR and guess FAVOR
x play deal with invalid guess on first attempt
x play first attempt with non-winning guess
x play second attempt with winning guess
x play second attempt with non-winning guess
x play third attempt with winning guess
x play third attempt with non-winning guess
x play fourth attempt with winning guess
x play fourth attempt with non-winning guess
x play fifth attempt with winning guess
x play fifth attempt with non-winning guess
x play sixth attempt with winning guess
x play sixth attempt with non-winning guess
x play seventh attempt with winning guess
x play eight attempt with non-winning guess

Let's incrementally create a GUI at this time. Please exclude the GUI code from code coverage.
When CI automation is run the GUI *should not* be executed since there is no one on the CI server to view this.
In order to make it easier to run, we will do the following:

paver - will execute the test and coverage, etc. like it does now
paver run - will execute the GUI


x play throws an exception for attempt 1, target FAVOR and guess FEVER where FEVER is considered incorrect spelling
x play returns proper response for attempt 1, target FAVOR and guess FEVER where FEVER is considered correct spelling
x play throws an exception for attempt 1, target FAVOR and guess FEVER where checking for spelling results in an exception

x getResponse returns 'true' for input FAVOR as respond from calling the webservice
x getResponse returns 'false' for input FAVRO as respond from calling the webservice

x parse returns true for argument 'true'
x parse returns false for argument 'false'
x parse raises ValueError when it does not receive a 'true' or 'false'

x isSpellingCorrect returns true if getResponse returns true and uses parse
x isSpellingCorrect returns false if getResponse returns false and uses parse
x isSpellingCorrect throws Network Error if getResponse throws that exception

Let's integrate the GUI to display the appropriate message if the user enters an incorrect spelling


x getResponse returns a list of words by calling the webservice
x getARandomWord given a list of words, returns two different words given the same list, on two different calls

Let's integrate the GUI to use pick from the words list
